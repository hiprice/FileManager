<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<!-- log4j先于spring加载 所以配置放在spring监听之前 否则会有异常 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webApp.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<!-- WEB-INF\classes\log4j.properties 是针对jboss的配置路径 classpath:log4j.properties 
			tomcat配置 -->
		<param-value>WEB-INF\classes\log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value><!-- log4j定时刷新读取配置信息（毫秒） -->
	</context-param>
	<!-- log4j监听 需要添加spring-web.jar包，否则用发生错误信息 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- 指定spring配置文件 -->
	<context-param>
		<!-- 指定spring配置文件位置 -->
		<param-name>contextConfigLocation</param-name>
		<!-- 多个配置文件的加载 要根据bean的依赖顺序，否则可能会报错 -->
		<param-value>
		classpath:applicationContext.xml
		</param-value>
	</context-param>

	<!-- 配置spring上下文监听 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 针对spring scope支持request,session和global session作用域的监听配置 session:为每个访问用户单独创建一个bean实例，在关闭浏览器时，销毁实例。 
		request:每一次http请求，都会新创建一个该类型的bean实例，在完成一次请求后，销毁实例。 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- 这个监听，用于清理spring类加载、拦截器可能造成的内存泄漏 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- 自定义监听器，实现应用程序启动时，执行某些方法类 -->
	<listener>
		<listener-class>com.ccland.action.HelloWorldListener</listener-class>
	</listener>
	

	<display-name></display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>


	<!-- 使用Spring字符编码过虑 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置struts2拦截所有请求 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置struts资源清理 -->
	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-cleanup</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
